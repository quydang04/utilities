#include <iostream>
#include <cstring>
using namespace std;

struct SinhVien {
    char ma[10];
    char ten[40];
    float dtb;
};

struct node {
    SinhVien data;
    node *next;
};

void ThemSV(node *&head, SinhVien sv) {
    node *newNode = new node;
    newNode->data = sv;
    newNode->next = head;
    head = newNode;
}

void XoaSVMa(node *&head, char maX[]) {
    node *current = head;
    node *prev = NULL;
    while (current != NULL) {
        if (strcmp(current->data.ma, maX) == 0) {
            if (prev != NULL) {
                prev->next = current->next;
                delete current;
                current = prev->next;
            } else {
                head = current->next;
                delete current;
                current = head;
            }
        } else {
            prev = current;
            current = current->next;
        }
    }
}

void XoaSVTen(node *&head, char tenX[]) {
    node *current = head;
    node *prev = NULL;
    while (current != NULL) {
        if (strcmp(current->data.ten, tenX) == 0) {
            if (prev != NULL) {
                prev->next = current->next;
                delete current;
                current = prev->next;
            } else {
                head = current->next;
                delete current;
                current = head;
            }
        } else {
            prev = current;
            current = current->next;
        }
    }
}

void SapXepTheoMa(node *&head) {
    if (head == NULL || head->next == NULL) {
        return;
    }

    node *current = head;
    node *nextNode = NULL;
    SinhVien temp;

    while (current != NULL) {
        nextNode = current->next;

        while (nextNode != NULL) {
            if (strcmp(current->data.ma, nextNode->data.ma) > 0) {
                temp = current->data;
                current->data = nextNode->data;
                nextNode->data = temp;
            }

            nextNode = nextNode->next;
        }

        current = current->next;
    }
}

void InDanhSachKha(node *head) {
    node *current = head;

    while (current != NULL) {
        if (current->data.dtb >= 6.5 && current->data.dtb <= 7.9) {
            cout << "MSSV: " << current->data.ma << ", Ten: " << current->data.ten << ", DTB: " << current->data.dtb << endl;
        }

        current = current->next;
    }
}

SinhVien TimSVMax(node *head) {
    node *current = head;
    SinhVien svMax;
    svMax.dtb = -1;

    while (current != NULL) {
        if (current->data.dtb > svMax.dtb) {
            svMax = current->data;
        }

        current = current->next;
    }

    return svMax;
}

SinhVien TimSVMinGioi(node* head) {
    node* current = head;
    SinhVien svMin;
    svMin.dtb = 10;

    while (current != NULL) {
        if (current->data.dtb >= 8.0 && current->data.dtb < svMin.dtb) {
            svMin = current->data;
        }

        current = current->next;
    }

    return svMin;
}

void timSVDTB5(node* head) {
    node *current = head;
    bool found = false;

    while (current != NULL) {
        if (current->data.dtb > 5.0) {
            found = true;
            cout << "MSSV: " << current->data.ma << ", Ten: " << current->data.ten << ", DTB: " << current->data.dtb << endl;
        }

        current = current->next;
    }

    if (!found) {
        cout << "Khong tim thay sinh vien nao co diem trung binh lon hon 5.\n";
    }
}

SinhVien NhapSV() {
    SinhVien sv;
    cout << "Nhap ma SV: ";
    cin >> sv.ma;
    cout << "Nhap ten SV: ";
    cin.ignore();
    cin.getline(sv.ten, 40);
    cout << "Nhap DTB: ";
    cin >> sv.dtb;
    return sv;
}

void XuatSV(SinhVien sv) {
    cout << "MSSV: " << sv.ma << ", Ten: " << sv.ten << ", DTB: " << sv.dtb << endl;
}

int main() {
    node* head = NULL;
    int chon;

    do {
        cout << "\n------ MENU ------\n";
        cout << "1. Them sinh vien\n";
        cout << "2. Xoa sinh vien theo ma\n";
        cout << "3. Xoa tat ca sinh vien theo ten\n";
        cout << "4. Sap xep danh sach theo ma SV\n";
        cout << "5. In danh sach sinh vien dat loai kha\n";
        cout << "6. Tim SV co DTB cao nhat\n";
        cout << "7. Tim SV co DTB thap nhat trong cac SV xep loai gioi\n";
        cout << "8. Xuat sinh vien co diem trung binh lon hon 5\n";
        cout << "9. Xuat danh sach sinh vien\n";
        cout << "0. Thoat\n";
        cout << "Chon: ";
        cin >> chon;

        switch (chon) {
            case 1: {
                SinhVien sv = NhapSV();
                ThemSV(head, sv);
                break;
            }
            case 2: {
                char maX[10];
                cout << "Nhap ma SV can xoa: ";
                cin >> maX;
                XoaSVMa(head, maX);
                break;
            }
            case 3: {
                char tenX[40];
                cout << "Nhap ten SV can xoa: ";
                cin.ignore();
                cin.getline(tenX, 40);
                XoaSVTen(head, tenX);
                break;
            }
            case 4: {
                SapXepTheoMa(head);
                cout << "Danh sach da sap xep theo ma SV.\n";
                break;
            }
            case 5: {
                cout << "Danh sach sinh vien dat loai kha:\n";
                InDanhSachKha(head);
                break;
            }
            case 6: {
                SinhVien svMax = TimSVMax(head);
                cout << "Sinh vien co DTB cao nhat:\n";
                XuatSV(svMax);
                break;
            }
            case 7: {
                SinhVien svMinGioi = TimSVMinGioi(head);
                cout << "Sinh vien co DTB thap nhat trong cac SV xep loai gioi:\n";
                XuatSV(svMinGioi);
                break;
            }
            case 8: {
            	cout << "Sinh vien co diem trung binh lon hon 5 la: " << endl;
            	timSVDTB5(head);
				break;
			}
            case 9: {
                cout << "Danh sach sinh vien:\n";
                node* current = head;
                while (current != NULL) {
                    XuatSV(current->data);
                    current = current->next;
                }
                break;
            }
            case 0: {
                cout << "Da thoat chuong trinh!";
                while (head != NULL) {
                	cout << "Da thoat chuong trinh\n";
                    node* temp = head;
                    head = temp->next;
                    delete temp;
                }
                break;
            }
            default:
                cout << "Lua chon khong hop le. Vui long chon lai.\n";
        }
    } while (chon != 0);

    return 0;
}
